{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ACER\\\\Desktop\\\\ImageGallary\\\\imagegallary\\\\src\\\\App.jsx\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from 'react';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst images = [{\n  id: '1',\n  imageName: 'images1.jpg',\n  tag: 'free'\n}, {\n  id: '2',\n  imageName: 'images2.jpg',\n  tag: 'free'\n}, {\n  id: '3',\n  imageName: 'images3.jpg',\n  tag: 'pro'\n}, {\n  id: '4',\n  imageName: 'images4.jpg',\n  tag: 'free'\n}, {\n  id: '5',\n  imageName: 'images5.jpg',\n  tag: 'free'\n}, {\n  id: '6',\n  imageName: 'images6.jpg',\n  tag: 'pro'\n}, {\n  id: '7',\n  imageName: 'images7.jpg',\n  tag: 'free'\n}, {\n  id: '8',\n  imageName: 'images8.jpg',\n  tag: 'pro'\n}, {\n  id: '91',\n  imageName: 'images9.jpg',\n  tag: 'free'\n}, {\n  id: '10',\n  imageName: 'images10.jpg',\n  tag: 'pro'\n}, {\n  id: '11',\n  imageName: 'images11.jpg',\n  tag: 'free'\n}];\nfunction App() {\n  _s();\n  const [tag, setTag] = useState('all');\n  const [filteredImages, setFilteredImages] = useState([]);\n  useEffect(() => {\n    tag == 'all' ? setFilteredImages(images) : setFilteredImages(images.filter(image => image.tag == tag));\n  }, [tag]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: filteredImages.map(image => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: image.imageName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 39\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"fmjIsIex+899YbzElEE1U5Ptuzw=\");\n_c = App;\nconstTagButton = () => {\n  return;\n};\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useEffect","useState","jsxDEV","_jsxDEV","images","id","imageName","tag","App","_s","setTag","filteredImages","setFilteredImages","filter","image","className","children","map","fileName","_jsxFileName","lineNumber","columnNumber","_c","constTagButton","$RefreshReg$"],"sources":["C:/Users/ACER/Desktop/ImageGallary/imagegallary/src/App.jsx"],"sourcesContent":["\nimport { useEffect, useState } from 'react';\nimport './App.css';\n\nconst images =[\n  {id:'1',imageName: 'images1.jpg' , tag: 'free'},\n  {id:'2',imageName: 'images2.jpg' , tag: 'free'},\n  {id:'3',imageName: 'images3.jpg' , tag: 'pro'},\n  {id:'4',imageName: 'images4.jpg' , tag: 'free'},\n  {id:'5',imageName: 'images5.jpg' , tag: 'free'},\n  {id:'6',imageName: 'images6.jpg' , tag: 'pro'},\n  {id:'7',imageName: 'images7.jpg' , tag: 'free'},\n  {id:'8',imageName: 'images8.jpg' , tag: 'pro'},\n  {id:'91',imageName: 'images9.jpg' , tag: 'free'},\n  {id:'10',imageName: 'images10.jpg' , tag: 'pro'},\n  {id:'11',imageName: 'images11.jpg' , tag: 'free'},\n];\n\nfunction App() {\n  const [tag , setTag]= useState('all');\n  const[filteredImages , setFilteredImages]= useState([]);\n\n  useEffect(()=>{\n    tag == 'all' ? setFilteredImages(images) : setFilteredImages(images.filter(image => image.tag == tag))\n\n  },[tag])\n  return (\n    <div className=\"App\">\n      <div>\n        {filteredImages.map( image => <div>{image.imageName}</div>)}\n      </div>\n      \n      \n\n    </div>\n  );\n}\n\nconstTagButton =() => {\n  return\n}\n\nexport default App;\n"],"mappings":";;AACA,SAASA,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC3C,OAAO,WAAW;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnB,MAAMC,MAAM,GAAE,CACZ;EAACC,EAAE,EAAC,GAAG;EAACC,SAAS,EAAE,aAAa;EAAGC,GAAG,EAAE;AAAM,CAAC,EAC/C;EAACF,EAAE,EAAC,GAAG;EAACC,SAAS,EAAE,aAAa;EAAGC,GAAG,EAAE;AAAM,CAAC,EAC/C;EAACF,EAAE,EAAC,GAAG;EAACC,SAAS,EAAE,aAAa;EAAGC,GAAG,EAAE;AAAK,CAAC,EAC9C;EAACF,EAAE,EAAC,GAAG;EAACC,SAAS,EAAE,aAAa;EAAGC,GAAG,EAAE;AAAM,CAAC,EAC/C;EAACF,EAAE,EAAC,GAAG;EAACC,SAAS,EAAE,aAAa;EAAGC,GAAG,EAAE;AAAM,CAAC,EAC/C;EAACF,EAAE,EAAC,GAAG;EAACC,SAAS,EAAE,aAAa;EAAGC,GAAG,EAAE;AAAK,CAAC,EAC9C;EAACF,EAAE,EAAC,GAAG;EAACC,SAAS,EAAE,aAAa;EAAGC,GAAG,EAAE;AAAM,CAAC,EAC/C;EAACF,EAAE,EAAC,GAAG;EAACC,SAAS,EAAE,aAAa;EAAGC,GAAG,EAAE;AAAK,CAAC,EAC9C;EAACF,EAAE,EAAC,IAAI;EAACC,SAAS,EAAE,aAAa;EAAGC,GAAG,EAAE;AAAM,CAAC,EAChD;EAACF,EAAE,EAAC,IAAI;EAACC,SAAS,EAAE,cAAc;EAAGC,GAAG,EAAE;AAAK,CAAC,EAChD;EAACF,EAAE,EAAC,IAAI;EAACC,SAAS,EAAE,cAAc;EAAGC,GAAG,EAAE;AAAM,CAAC,CAClD;AAED,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACF,GAAG,EAAGG,MAAM,CAAC,GAAET,QAAQ,CAAC,KAAK,CAAC;EACrC,MAAK,CAACU,cAAc,EAAGC,iBAAiB,CAAC,GAAEX,QAAQ,CAAC,EAAE,CAAC;EAEvDD,SAAS,CAAC,MAAI;IACZO,GAAG,IAAI,KAAK,GAAGK,iBAAiB,CAACR,MAAM,CAAC,GAAGQ,iBAAiB,CAACR,MAAM,CAACS,MAAM,CAACC,KAAK,IAAIA,KAAK,CAACP,GAAG,IAAIA,GAAG,CAAC,CAAC;EAExG,CAAC,EAAC,CAACA,GAAG,CAAC,CAAC;EACR,oBACEJ,OAAA;IAAKY,SAAS,EAAC,KAAK;IAAAC,QAAA,eAClBb,OAAA;MAAAa,QAAA,EACGL,cAAc,CAACM,GAAG,CAAEH,KAAK,iBAAIX,OAAA;QAAAa,QAAA,EAAMF,KAAK,CAACR;MAAS;QAAAY,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACxD;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAIH,CAAC;AAEV;AAACZ,EAAA,CAlBQD,GAAG;AAAAc,EAAA,GAAHd,GAAG;AAoBZe,cAAc,GAAEA,CAAA,KAAM;EACpB;AACF,CAAC;AAED,eAAef,GAAG;AAAC,IAAAc,EAAA;AAAAE,YAAA,CAAAF,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}